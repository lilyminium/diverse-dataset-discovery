name: Test executable
on:
  workflow_dispatch:

concurrency:
  # Specific group naming so CI is only cancelled
  # within same PR or on merge to main
  group: ${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

env:
  OE_LICENSE: ${{ github.workspace }}/oe_license.txt

jobs:
  main_tests:
    name: CI (${{ matrix.os }}, py-${{ matrix.python-version }}, tk=${{ matrix.openff-toolkit-version}}, rd=${{ matrix.include-rdkit }}, oe=${{ matrix.include-openeye }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [macOS-12, macos-latest, ubuntu-latest]
          python-version: ["3.8", "3.9", "3.10", "3.11"]
          openff-toolkit-version: ["0.10.4", "0.11.0", "0.12.0", "0.13.0", "0.14.0", "0.15.0", "0.16.0"]
          include-rdkit: [false, true]
          include-openeye: [false, true]
          # see if we can do pint versioning
          include:
            - openff-toolkit-version: "0.10.4"
              pint-version: "0.17"
            - openff-toolkit-version: "0.11.0"
              pint-version: "0.18"
          exclude:
            - include-rdkit: false
              include-openeye: false
            - os: macos-latest
              python-version: "3.8"
            - python-version: "3.8"
              openff-toolkit-version: "0.13.0"
            - python-version: "3.8"
              openff-toolkit-version: "0.14.0"
            - python-version: "3.8"
              openff-toolkit-version: "0.15.0"
            - python-version: "3.8"
              openff-toolkit-version: "0.16.0"


    steps:
    - uses: actions/checkout@v4

    - name: Build information
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Install environment with pint
      if: matrix.pint-version != null
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: devtools/conda-envs/test.yaml
        create-args: >-
          python=${{ matrix.python-version }}
          openff-toolkit=${{ matrix.openff-toolkit-version }}
          pint<=${{ matrix.pint-version }}
    
    - name: Install environment
      if: matrix.pint-version == null
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: devtools/conda-envs/test.yaml
        create-args: >-
          python=${{ matrix.python-version }}
          openff-toolkit=${{ matrix.openff-toolkit-version }}


    - uses: ./.github/actions/include-openeye
      if: matrix.include-openeye == true
      with:
        openeye-license-text: ${{ secrets.OE_LICENSE }}
        openeye-license-file: ${{ env.OE_LICENSE }}

      
    - name: Uninstall OpenEye
      if: matrix.include-openeye == false
      run: micromamba remove --force openeye-toolkits --yes || echo "openeye not installed"

    - name: Uninstall RDKit
      if: matrix.include-rdkit == false
      run: micromamba remove --force rdkit --yes || echo "rdkit not installed"

    - name: Check toolkit installations
      shell: bash -l -c "python -u {0}"
      run: |
        from openff.toolkit.utils.toolkits import OPENEYE_AVAILABLE, RDKIT_AVAILABLE
        assert str(OPENEYE_AVAILABLE).lower() == '${{ matrix.include-openeye }}', OPENEYE_AVAILABLE
        assert str(RDKIT_AVAILABLE).lower() == '${{ matrix.include-rdkit }}', RDKIT_AVAILABLE

    - name: Test general forcefield import
      run: |
        python -c 'from openff.toolkit.typing.engines.smirnoff import ForceField; ForceField("openff-1.3.0.offxml")'

    - name: Run script without csv
      run: |
        cd example/
        python ../bin/select-interesting-molecules_2.2.0_v1.py -i test.smi -np 4 -n 100
        cat output.smi

        ls *
        # [ -f output.csv ] && { echo "Error: output.csv exists." >&2; exit 1; }
        
      
    - name: Run script with csv
      run: |
        cd example/
        python ../bin/select-interesting-molecules_2.2.0_v1.py -i test.smi -o output-test.smi -of output.csv -c counts.csv -np 4
        cat output-test.smi

        cat counts.csv
